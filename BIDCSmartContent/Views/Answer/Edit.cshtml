@using BIDVSmartContent.Models.FunctionModel
@model BIDVSmartContent.Models.AnswerModels.AnswerModel

@{
    ViewBag.Title = "Update Answer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    Html.RenderPartial("_NavigationTitleLink", "Answer List");
}

<div class="page-content">
    <div class="page-content-area">
        @{
            Html.RenderPartial("_HeaderPage", new[] { "Answer Manager", "Update Answer" });
        }

        <div class="row">
            <div class="col-xs-12">
                <!-- PAGE CONTENT BEGINS -->
                
                <form class="form-horizontal" role="form">
                    <div class="form-group clearfix">
                        <div class="col-md-offset-2 col-md-9">
                            <label id="lblMessage" class="lblmsg"></label>
                        </div>
                    </div>
                    <div class="form-group clearfix">
                        <label class="col-sm-2 control-label no-padding-right"> Id: </label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(m => m.AS_ID, new { @class = "col-xs-9 col-sm-5", @id = "id", @readonly = "readonly" })
                        </div>
                    </div>                   
                    <div class="form-group clearfix">
                        <label class="col-sm-2 control-label no-padding-right p_top">Question Content (<span class="red">*</span>): </label>
                        <div class="col-sm-10">
                            @Html.TextAreaFor(model => model.QS_CONTENT, new { @class = "col-xs-9 col-sm-5", @id = "editor2", placeholder = "QS_CONTENT" })
                        </div>
                    </div>
                     <div class="form-group clearfix">
                        <label class="col-sm-2 control-label no-padding-right p_top">Answer Content(<span class="red">*</span>): </label>
                        <div class="col-sm-10">
                            @Html.TextAreaFor(model => model.AS_CONTENT, new { @class = "col-xs-9 col-sm-5", @id = "editor1", placeholder = "AS_CONTENT" })
                        </div>
                    </div>
                    <div class="clearfix form-actions">
                        <div class="col-md-offset-2 col-md-9"><a class="btn btn-info" id="edit" href="">Update</a>&nbsp;<a class="btn btn-info" href="@Url.Action("Index", "Answer", new { f = FunctionIdConstant.FuncSupportId, c = FunctionIdConstant.FuncAnswerList })">Go to List</a></div>
                    </div>
                </form>
            </div>
            <!-- /.col -->
        </div>
    </div>
</div>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title" id="myModalLabel">Notification</h4>
            </div>
            <div class="modal-body">Do you want to delete this record?</div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-primary">OK</button>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script type="text/javascript">
        CKEDITOR.replace("editor1");
        CKEDITOR.replace("editor2");
        $(document).ready(function() {
            $('#edit').click(function() {
                var model = {
                    AS_ID: $('#id').val(),
                    AS_CONTENT: $('#editor1').text(CKEDITOR.instances["editor1"].getData()).val(),
                    QS_CONTENT: $('#editor2').text(CKEDITOR.instances["editor2"].getData()).val()
                };
                if (model.AS_CONTENT === "" || model.QS_CONTENT === "") {
                    document.getElementById("lblMessage").innerText = "Question and Answer must be require.";
                    document.getElementById("lblMessage").style.color = "red";
                    return false;
                }
                $.ajax({
                    contentType: 'application/json; charset=utf-8',
                    url: getRootUrl() + '/Answer/Edit',
                    type: 'POST',
                    data: JSON.stringify(model)
                }).success(function(data) {
                    if (redirectToLogin(data)) {
                        window.location.href = "/Account/Login";
                    } else {
                        document.getElementById("lblMessage").innerText = data;
                        document.getElementById("lblMessage").style.color = "green";
                    }

                }).error(function(data) {

                });
                return false;
            });
        });

        function redirectToLogin(data)
        {
            if (data.toString().indexOf("!DOCTYPE") > 0)
            {
                return true;
            }
            return false;
        }
    </script>
}
